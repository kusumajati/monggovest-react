{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/monggovest/src/auth/auth.login.jsx\";\nimport React from 'react';\nimport store from 'store';\nimport isLoggedIn from '../helper/isLoggedIn';\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Container, Button, Form, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      email: ''\n    };\n    this.changePassword = this.changePassword.bind(this);\n    this.changeEmail = this.changeEmail.bind(this);\n    this.logInLogic = this.logInLogic.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleNested = this.toggleNested.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  toggleNested() {\n    this.setState({\n      nestedModal: !this.state.nestedModal,\n      closeAll: false\n    });\n  }\n\n  toggleAll() {\n    this.setState({\n      nestedModal: !this.state.nestedModal,\n      closeAll: true\n    });\n  }\n\n  changePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  changeEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  logInLogic() {\n    this.setState({\n      error: false\n    });\n\n    if (!(this.state.email === 'didik' && this.state.password === '12345')) {\n      return this.setState({\n        error: true\n      });\n    }\n\n    store.set('loggedIn', true);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    console.log(isLoggedIn());\n\n    if (isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/investasi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"LOGIN\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Email: \"), React.createElement(Input, {\n        onChange: this.changeEmail,\n        placeholder: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Password: \"), React.createElement(Input, {\n        onChange: this.changePassword,\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.logInLogic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }\n\n}\n\n;\nexport default Login;","map":{"version":3,"sources":["/home/mahendra/Documents/react/monggovest/src/auth/auth.login.jsx"],"names":["React","store","isLoggedIn","InputGroup","InputGroupAddon","InputGroupText","Input","Container","Button","Form","Modal","ModalHeader","ModalBody","ModalFooter","Redirect","Login","Component","constructor","props","state","password","email","changePassword","bind","changeEmail","logInLogic","toggle","toggleNested","toggleAll","setState","prevState","modal","nestedModal","closeAll","event","target","value","error","set","history","push","render","console","log","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport store from 'store'\nimport isLoggedIn from '../helper/isLoggedIn'\nimport { InputGroup, InputGroupAddon, InputGroupText, Input, Container, Button, Form,Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { Redirect } from 'react-router-dom'\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            password: '',\n            email: ''\n\n        }\n        this.changePassword = this.changePassword.bind(this)\n        this.changeEmail = this.changeEmail.bind(this)\n        this.logInLogic = this.logInLogic.bind(this)\n        this.toggle = this.toggle.bind(this);\n        this.toggleNested = this.toggleNested.bind(this);\n        this.toggleAll = this.toggleAll.bind(this);        \n    }\n\n  \n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  toggleNested() {\n    this.setState({\n      nestedModal: !this.state.nestedModal,\n      closeAll: false\n    });\n  }\n\n  toggleAll() {\n    this.setState({\n      nestedModal: !this.state.nestedModal,\n      closeAll: true\n    });\n  }\n\n    changePassword(event) {\n        this.setState({\n            password: event.target.value\n        })\n    }\n    changeEmail(event) {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    logInLogic() {\n        this.setState({ error: false });\n\n        if (!(this.state.email === 'didik' && this.state.password === '12345')) {\n            return this.setState({ error: true });\n        }\n\n        store.set('loggedIn', true);\n        this.props.history.push('/');\n    }\n    render() {\n        const { email, password } = this.state\n        console.log(isLoggedIn())\n        if (isLoggedIn()) {\n            return (\n                <Redirect to='/investasi' />\n            )\n        } else {\n\n            return (\n                <div>\n                    <Container style={{ textAlign: 'center' }}>\n                        <h1>LOGIN</h1>\n                        <Form>\n                            <InputGroupAddon  addonType=\"prepend\">Email: </InputGroupAddon>\n                            <Input  onChange={this.changeEmail} placeholder=\"email\" />\n\n                            <InputGroupAddon addonType=\"prepend\">Password: </InputGroupAddon>\n                            <Input onChange={this.changePassword} placeholder=\"Password\" />\n\n                            <Button onClick={this.logInLogic}>Submit</Button>\n                        </Form>\n                        \n                    </Container>\n                </div>\n            );\n        }\n    }\n};\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}