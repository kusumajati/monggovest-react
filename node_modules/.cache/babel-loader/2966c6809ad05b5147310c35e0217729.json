{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/monggovest/src/common/AppHeader.jsx\";\nimport React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'; // import Style from '../assets/style'\n\nimport { Link, withRouter } from 'react-router-dom';\nimport store from 'store';\nimport isLoggedIn from '../helper/isLoggedIn';\nimport Axios from 'axios';\n\nclass AppHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      user: {}\n    };\n    this.logOutLogic = this.logOutLogic.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logOutLogic() {\n    store.remove('loggedIn');\n    localStorage.removeItem('JWT_TOKEN');\n    localStorage.removeItem('USER_ID');\n    this.props.history.push('/login');\n  }\n\n  componentDidMount() {\n    if (isLoggedIn()) {\n      Axios.get(\"https://nino-monggovest.herokuapp.com/v1/api/user/\".concat(localStorage.getItem('USER_ID'))).then(res => {\n        this.setState({\n          user: res.data.data\n        });\n      }).catch(err => {\n        console.log(err);\n        alert(err);\n      });\n    }\n  }\n\n  render() {\n    console.log('ini user', this.state.user);\n    let logInCheck;\n    const user = this.state.user;\n\n    if (isLoggedIn()) {\n      logInCheck = React.createElement(NavLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: this.logOutLogic,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Logout\"));\n    } else {\n      logInCheck = React.createElement(NavLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"text-white\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Login\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"dark\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      className: \"text-white\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"100px\"\n      },\n      src: \"https://monggovest.herokuapp.com/static/img/Logo-White@2x.39103d4.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"https://nino-monggovest.heroku-app.com/investment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"text-white\",\n      to: \"/investasi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Investasi\"))), React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      className: \"text-white\",\n      nav: true,\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Options\"), React.createElement(DropdownMenu, {\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Option 1\"), React.createElement(DropdownItem, {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Option 2\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Reset\")))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, logInCheck))));\n  }\n\n}\n\nexport default withRouter(AppHeader);","map":{"version":3,"sources":["/home/mahendra/Documents/react/monggovest/src/common/AppHeader.jsx"],"names":["React","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Link","withRouter","store","isLoggedIn","Axios","AppHeader","Component","constructor","props","toggle","bind","state","isOpen","user","logOutLogic","setState","remove","localStorage","removeItem","history","push","componentDidMount","get","getItem","then","res","data","catch","err","console","log","alert","render","logInCheck","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n// import Style from '../assets/style'\nimport { Link, withRouter } from 'react-router-dom'\nimport store from 'store'\nimport isLoggedIn from '../helper/isLoggedIn'\nimport Axios from 'axios';\n\n\nclass AppHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n            user: {}\n        };\n        this.logOutLogic = this.logOutLogic.bind(this)\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    logOutLogic() {\n        store.remove('loggedIn');\n        localStorage.removeItem('JWT_TOKEN')\n        localStorage.removeItem('USER_ID')\n        this.props.history.push('/login')\n    }\n    componentDidMount() {\n        if (isLoggedIn()) {\n            Axios.get(`https://nino-monggovest.herokuapp.com/v1/api/user/${localStorage.getItem('USER_ID')}`)\n                .then(res => {\n                    this.setState({\n                        user: res.data.data\n                    })\n\n\n                }).catch(err => {\n                    console.log(err)\n                    alert(err)\n                })\n\n        }\n\n    }\n    render() {\n        console.log('ini user', this.state.user)\n        let logInCheck\n        const user = this.state.user\n        if (isLoggedIn()) {\n            logInCheck = <NavLink  ><Link onClick={this.logOutLogic} className='text-white' >Logout</Link></NavLink>\n\n        } else {\n            logInCheck = <NavLink  ><Link className='text-white' to='/login' >Login</Link></NavLink>\n        }\n        return (\n            <div>\n                <Navbar color=\"dark\" light expand=\"md\">\n\n                    <NavbarBrand className='text-white' href=\"/\"><img style={{ width: \"100px\" }} src=\"https://monggovest.herokuapp.com/static/img/Logo-White@2x.39103d4.png\" /></NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink href=\"https://nino-monggovest.heroku-app.com/investment\"><Link className='text-white' to='/investasi' >Investasi</Link></NavLink>\n                            </NavItem>\n\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle className='text-white' nav caret>\n                                    Options\n                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem className='text-primary'>\n                                        Option 1\n                  </DropdownItem>\n                                    <DropdownItem className='text-primary'>\n                                        Option 2\n                  </DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem className='text-primary'>\n                                        Reset\n                  </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </Nav>\n                        <NavItem>\n                        {logInCheck}\n                    </NavItem>\n                    </Collapse>\n\n\n                </Navbar>\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AppHeader)"]},"metadata":{},"sourceType":"module"}